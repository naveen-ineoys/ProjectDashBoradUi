@model MainModel
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<style>

    .gantt-container {
    display: grid;
    grid-auto-rows: 44px;
    grid-template-columns: repeat( @Model.NoOfDaysInMonth, 3fr);
    gap: 1px;
    border: 1px solid #ddd;

    padding: 10px;
    background-color: #f9f9f9;
    overflow-x: hidden;
    overflow-y: auto;
    height:300px;

    }

    .gantt-header {
    font-weight: bold;
    text-align: center;
    padding: 1px;

    background-color: #ddd;
    box-shadow: -10px 0px 1px 0px #cccbcb;

    }

    .booking-bar {
    height:25px;
    color: #7b817f;
    box-shadow: 0 0 2px black;
    text-align: center;
    line-height: 25px;
    border-radius: 5px;
    z-index: 1;
    overflow: hidden;
    white-space: nowrap;

    }

    .gantt-container-bottom {
    display: grid;
    grid-template-columns: repeat( @Model.NoOfDaysInMonth, 3fr);
    gap: 1px;
    border: 1px solid #ddd;

    padding: 10px;
    background-color: #f9f9f9;
    overflow-x: auto;
    overflow-y:hidden;
    }

    .bottom-data {
    text-align: center;
    width:70px;
    padding: 5px;
    background-color: #e9ecef;
    box-shadow: -5px 0px 1px 0px #cccbcb;
    }

    .firstIcon{
    width:22px;
    height:22px;


    }

    .iconDiv{
    width:50px;

    }


</style> 
<div class="overall-container mt-3" >
    <div class="gantt-container mt-2" id="topContainer">
        <!-- Gantt Chart Header -->
        @{
            var year = Model.currentYear;
            var month = Model.currentMonth;
            var startDate = new DateTime(year, month, 1); // Assuming Model.Year and Model.Month are available
        }
        @for (int i = 1; i <= Model.NoOfDaysInMonth; i++)
        {
            var currentDate = startDate.AddDays(i - 1);
            var dayName = currentDate.ToString("ddd"); // Short name of the day (e.g., Sun, Mon, Tue)
            <div class="bottom-data">

                <strong>Day @i</strong>
                <div>@dayName</div> 
            </div>
        }

        <!-- Booking Bars -->
        @{
             <!-- rows variable declare for Store the want bar deatils in the list -->
            var rows = new List<List<(int start, int end, string content,string icon)>>();
          

        foreach (var item in Model.guestModals)
        {
            int startDay = Math.Max(item.CheckInDate.Day, 1);
            int endDay = Math.Min(item.CheckOutDate.Day, Model.NoOfDaysInMonth);
            string content = $"{item.GuestName} ({item.RoomId}) ";
            var icon = item.Status;

            bool placed = false;
            for (int r = 0; r < rows.Count; r++)
            {
                if (rows[r].All(existing => existing.end < startDay || existing.start > endDay))
                {
                     <!-- Add the data to rows list -->
                    rows[r].Add((startDay, endDay, content,icon));
                    placed = true;
                    break;
                }
            }

            if (!placed)
            {
                rows.Add(new List<(int start, int end, string content,string icon)> { (startDay, endDay, content,icon) });
            }
        }
    }
     <!-- Take the rows list for creating a rows and columns for booking details bar  -->
    @for (int r = 0; r < rows.Count; r++)
    {
        foreach (var booking in rows[r])
            {
                <div class="d-flex justify-content-between mt-2 booking-bar" style="grid-column: @booking.start / @(booking.end + 1); grid-row: @(r + 2);">
                    <span> @booking.content</span>
                     <!-- Display the icon based on the guest Status -->
                    <div class="iconDiv">
                        @if (booking.icon == "Arrived")
                        {
                            <svg class="firstIcon" xmlns="http://www.w3.org/2000/svg" shape-rendering="geometricPrecision" text-rendering="geometricPrecision" image-rendering="optimizeQuality" fill-rule="evenodd" clip-rule="evenodd" viewBox="0 0 512 410.2"><path d="M35.28 35.51h32.54v43.42c0 10.58 4.27 20.06 11.35 27.23 17.03 17.14 45.5 17.45 63.06.93 7.71-7.29 12.4-17.14 12.4-28.16V35.51h65.71v43.42c0 6.34 1.56 12.3 4.35 17.6 2.03 3.85 4.71 7.37 7.92 10.43l2.41 2.24c1.79 1.46 3.71 2.79 5.76 3.97l.31.18.07.04.25.13.16.1.15.08.27.14.05.03.32.17.05.03.27.13.15.08.17.09.26.12.07.04.32.16.03.01.31.15.12.06.2.09.24.11.1.05.33.14.34.16.1.04.23.1.21.09.13.05.31.13h.03l.34.14.08.04.27.1.18.07.16.06.3.11.05.02.34.12.06.02.3.11.16.05.19.07.26.09.09.03.35.12.02.01.34.1.13.04.22.07.25.07.11.03.36.11.36.1.11.03.25.07.22.06.14.04.34.09h.02l.37.1.08.02.29.06.19.05.17.03.32.08.05.01.37.08.06.01.31.06.17.04.21.03.28.06.09.02.37.07h.03l.35.06.14.03.23.03.27.04.11.02.38.06.38.05.12.01.26.04.23.03.15.01.35.05h.03l.39.04.08.01.3.02.21.02.17.02.34.02.05.01.39.03h.05l.34.02.18.01.21.01.3.02h.08l.39.01.03.01.36.01h.39l.28.01h.96l.33-.01h.39l.18-.01.2-.01.25-.01h.13l.32-.02h.07l.38-.02h.01l.37-.02.07-.01.32-.02.12-.01.26-.02.19-.02.19-.02.25-.02.13-.01.31-.04h.07l.37-.05h.01l.37-.04.06-.01.32-.04.12-.02.26-.03.18-.03.19-.03.24-.04.14-.02.3-.05.07-.01.36-.06h.01l.37-.07.05-.01.32-.06.12-.02.25-.05.18-.04.19-.04.23-.05.14-.03.29-.07.08-.01.35-.08.01-.01.36-.08.05-.02.31-.08.11-.02.25-.07.17-.04.2-.06.22-.05.14-.05.28-.08.07-.02.34-.09.02-.01.36-.11.03-.01.32-.1.1-.03.25-.08.16-.05.19-.07.22-.07.13-.04.28-.1.08-.03.32-.11.02-.01.35-.13.04-.01.3-.11.09-.04.26-.1.15-.06.19-.07.21-.09.13-.05.26-.11.08-.03.32-.13.02-.01.33-.14.04-.02.3-.13.09-.04.24-.11.14-.07.19-.08.19-.1.14-.06.25-.12.08-.03.3-.16h.03l.32-.17.03-.01.29-.16.09-.04.24-.12.13-.07.19-.1.18-.1.14-.07.23-.13.08-.05.29-.16.03-.01.31-.18c1.11-.64 2.17-1.31 3.2-2.03l2.71-1.95c4.36-3.56 7.92-7.88 10.43-12.76 2.73-5.26 4.25-11.19 4.25-17.5V35.51h33.97c9.68 0 18.5 3.98 24.91 10.38 6.4 6.37 10.38 15.2 10.38 24.9V192.9H365.1v-53.83H11.3v233.49c0 15.25 12.49 27.74 27.75 27.74h298.3c15.27 0 27.75-12.51 27.75-27.74V325.6h11.31v49.32c0 9.7-3.98 18.53-10.37 24.91-6.42 6.39-15.24 10.37-24.92 10.37H35.28c-9.68 0-18.49-3.97-24.89-10.37C3.97 393.41 0 384.59 0 374.92V70.79C0 61.12 3.97 52.3 10.36 45.9c6.43-6.42 15.25-10.39 24.92-10.39zm211.43-21.54c0-7.71 7.61-13.97 17.03-13.97 9.42 0 17.04 6.26 17.04 13.97v64.96c0 7.7-7.62 13.96-17.04 13.96-9.42 0-17.03-6.26-17.03-13.96V13.97zm-152.52 0C94.19 6.26 101.81 0 111.23 0c9.42 0 17.03 6.26 17.03 13.97v64.96c0 7.7-7.61 13.96-17.03 13.96-9.42 0-17.04-6.26-17.04-13.96V13.97zm311.37 327.72c1.48-14.79 2.69-32.45 3.59-46.5h-75.88v-71.88h77.43c-.39-14.06-1.17-31.75-2.35-46.58-.96-5.93 6.02-9.73 10.51-5.9l90.89 82.99c2.7 2.31 3.02 6.38.7 9.08l-.74.73-93.65 84.05c-4.6 3.89-11.47-.19-10.5-5.99zM63.51 286h50.56c3.53 0 6.43 2.91 6.43 6.44v42.06c0 3.52-2.91 6.44-6.43 6.44H63.51c-3.53 0-6.44-2.91-6.44-6.44v-42.06c0-3.54 2.9-6.44 6.44-6.44zm198.44-98.62h50.55c3.23 0 5.92 2.43 6.37 5.52h-16v49.42h-40.92c-3.53 0-6.45-2.9-6.45-6.45v-42.05c0-3.54 2.9-6.44 6.45-6.44zm0 98.62h40.92v39.6h16.07v8.9c0 3.52-2.92 6.44-6.44 6.44h-50.55c-3.53 0-6.45-2.91-6.45-6.44v-42.06c0-3.54 2.9-6.44 6.45-6.44zm-98.5-98.62h50.56c3.53 0 6.43 2.92 6.43 6.44v42.05c0 3.53-2.91 6.45-6.43 6.45h-50.56c-3.53 0-6.44-2.9-6.44-6.45v-42.05c0-3.54 2.9-6.44 6.44-6.44zm-99.94 0h50.56c3.53 0 6.43 2.92 6.43 6.44v42.05c0 3.53-2.91 6.45-6.43 6.45H63.51c-3.53 0-6.44-2.9-6.44-6.45v-42.05c0-3.54 2.9-6.44 6.44-6.44zM163.45 286h50.56c3.53 0 6.43 2.91 6.43 6.44v42.06c0 3.52-2.91 6.44-6.43 6.44h-50.56c-3.53 0-6.44-2.91-6.44-6.44v-42.06c0-3.54 2.9-6.44 6.44-6.44z" /></svg>

                        }
                        else if(booking.icon=="Left")
                        {
                            <svg class="firstIcon" xmlns="http://www.w3.org/2000/svg" shape-rendering="geometricPrecision" text-rendering="geometricPrecision" image-rendering="optimizeQuality" fill-rule="evenodd" clip-rule="evenodd" viewBox="0 0 512 411.74"><path fill-rule="nonzero" d="M342.41 411.74H35.42c-9.72 0-18.56-3.99-24.99-10.4C3.99 394.89 0 386.04 0 376.32V71.06c0-9.71 3.99-18.56 10.4-24.99 6.46-6.44 15.31-10.43 25.02-10.43h32.66v43.58c0 12.2 5.64 22.93 14.73 30.38l.05-.06c7.69 6.28 17.88 10.17 28.79 10.17 11.01 0 21.22-3.86 28.83-10.1v-.1c9.1-7.47 14.73-18.18 14.73-30.29V35.64h65.96v43.58c0 11 4.65 20.83 12.32 28.15l2.41 2.24c7.61 6.23 17.82 10.1 28.83 10.1 9.69 0 18.82-3.07 26.12-8.16l2.72-1.95c9.09-7.45 14.73-18.18 14.73-30.38V35.64h34.11c9.71 0 18.57 3.99 24.99 10.42 6.43 6.4 10.42 15.26 10.42 25v102c-3.77 3.37-7.56 6.79-11.35 10.23v-45.11H11.35v234.36c0 15.31 12.53 27.85 27.85 27.85h299.42c15.32 0 27.85-12.56 27.85-27.85v-38.7l11.35 10.19v32.29c0 9.75-3.99 18.61-10.4 25.02-6.44 6.41-15.3 10.4-25.01 10.4zm97.02-68.76c-1.48-14.86-2.7-32.58-3.6-46.68H512v-72.15h-77.72c.39-14.11 1.17-31.87 2.36-46.76.96-5.95-6.04-9.76-10.55-5.92l-91.24 83.3c-2.7 2.32-3.02 6.41-.7 9.11l.74.74 94.01 84.37c4.61 3.91 11.51-.2 10.53-6.01zM247.64 14.02c0-7.73 7.64-14.02 17.09-14.02 9.46 0 17.11 6.29 17.11 14.02v65.2c0 7.74-7.65 14.02-17.11 14.02-9.45 0-17.09-6.28-17.09-14.02v-65.2zm-153.1 0C94.54 6.29 102.2 0 111.65 0s17.1 6.29 17.1 14.02v65.2c0 7.74-7.65 14.02-17.1 14.02-9.45 0-17.11-6.28-17.11-14.02v-65.2zM63.75 287.07h50.75c3.55 0 6.46 2.93 6.46 6.47v42.21c0 3.54-2.93 6.47-6.46 6.47H63.75c-3.54 0-6.47-2.92-6.47-6.47v-42.21c0-3.56 2.92-6.47 6.47-6.47zm199.18-98.98h50.75c3.55 0 6.46 2.92 6.46 6.46v32.13l-6.83 6.57a36.773 36.773 0 0 0-7.32 9.98h-43.06c-3.54 0-6.47-2.91-6.47-6.47v-42.21c0-3.56 2.92-6.46 6.47-6.46zm0 98.98h50.75l.76.05.19.16 5.34 4.8c.11.47.17.95.17 1.46v42.21c0 3.54-2.93 6.47-6.46 6.47h-50.75c-3.54 0-6.47-2.92-6.47-6.47v-42.21c0-3.56 2.92-6.47 6.47-6.47zm-98.86-98.98h50.74c3.55 0 6.46 2.92 6.46 6.46v42.21c0 3.54-2.92 6.47-6.46 6.47h-50.74c-3.54 0-6.47-2.91-6.47-6.47v-42.21c0-3.56 2.91-6.46 6.47-6.46zm-100.32 0h50.75c3.55 0 6.46 2.92 6.46 6.46v42.21c0 3.54-2.93 6.47-6.46 6.47H63.75c-3.54 0-6.47-2.91-6.47-6.47v-42.21c0-3.56 2.92-6.46 6.47-6.46zm100.32 98.98h50.74c3.55 0 6.46 2.93 6.46 6.47v42.21c0 3.54-2.92 6.47-6.46 6.47h-50.74c-3.54 0-6.47-2.92-6.47-6.47v-42.21c0-3.56 2.91-6.47 6.47-6.47z" /></svg>

                        }
                        else
                        {
                            <?xml version="1.0" encoding="utf-8"?><svg class="firstIcon"  version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 122.88 79.56" style="enable-background:new 0 0 122.88 79.56" xml:space="preserve"><style type="text/css">.st0{fill-rule:evenodd;clip-rule:evenodd;}</style><g><path class="st0" d="M21.65,24.62h20.96c3.42,0,6.22,2.79,6.22,6.21v6.22H21.65V24.62L21.65,24.62z M7.36,79.56h5.93 c1.72,0,3.12-1.42,3.12-3.12v-9.35H4.23v9.35C4.23,78.15,5.64,79.56,7.36,79.56L7.36,79.56z M108.79,79.56h5.93 c1.72,0,3.12-1.42,3.12-3.12v-9.35h-12.18v9.35C105.67,78.15,107.08,79.56,108.79,79.56L108.79,79.56z M2.82,41.01h1.41V3.12 C4.23,1.4,5.64,0,7.35,0h5.93c1.72,0,3.12,1.4,3.12,3.12v37.89h89.26V23.14c0-1.72,1.4-3.12,3.12-3.12h5.93 c1.72,0,3.12,1.42,3.12,3.12v17.87h2.22c1.55,0,2.82,1.27,2.82,2.82v15.99c0,1.55-1.27,2.81-2.82,2.81H2.82 C1.27,62.63,0,61.36,0,59.82V43.83C0,42.28,1.27,41.01,2.82,41.01L2.82,41.01z"/></g></svg>

                        }
                    </div>
                </div>

        }
    }
 

 </div>
  <!-- Bottom conatiner show available rooms and booked room deatils  -->
    <div class="gantt-container-bottom" id="bottomContainer">
    @for (int i = 1; i <= Model.NoOfDaysInMonth; i++)
    {
        int totalBookings = Model.guestModals.Count(g => g.CheckInDate.Day <= i && g.CheckOutDate.Day >= i);
             int totalAvailable = Model.TotalNoOfRooms - totalBookings; 

        <div class="bottom-data">
            
            Booked: @totalBookings<br />
           Available: @totalAvailable 
          
        </div>
    }
</div>
</div>
 <!-- import the external script file -->
<script src="~/js/partialjavascript.js"></script>
